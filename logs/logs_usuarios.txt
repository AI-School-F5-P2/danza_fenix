2023-07-24 14:48:40,067 - INFO - Se han listado los usuarios.
2023-07-24 14:48:49,079 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id
2023-07-24 14:48:49,080 - INFO - [cached since 9.023s ago] {}
2023-07-24 14:48:49,084 - INFO - Se han listado los usuarios.
2023-07-25 19:57:29,256 - INFO - Se han listado los usuarios.
2023-07-25 19:58:20,796 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.id = %(pk_1)s
2023-07-25 19:58:20,796 - INFO - [generated in 0.00048s] {'pk_1': 18}
2023-07-25 19:58:20,797 - INFO - Se ha mostrado el rol 18.
2023-07-25 19:59:31,178 - INFO - Se ha mostrado el rol 18.
2023-07-25 19:59:32,824 - INFO - Se ha mostrado el rol 18.
2023-07-25 19:59:53,127 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 19:59:53,127 - INFO - [generated in 0.00044s] {'id_1': 18, 'param_1': 1}
2023-07-25 19:59:53,128 - ERROR - Se ha intentado ver un usuario que no existe.
2023-07-25 20:00:09,717 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.id = %(pk_1)s
2023-07-25 20:00:09,717 - INFO - [cached since 108.9s ago] {'pk_1': 18}
2023-07-25 20:00:09,718 - INFO - Se ha mostrado el rol 18.
2023-07-25 20:12:49,623 - INFO - Se han listado los usuarios.
2023-07-25 20:12:49,624 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:13:28,326 - ERROR - Se ha intentado ver un usuario que no existe.
2023-07-25 20:13:38,174 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id
2023-07-25 20:13:38,174 - INFO - [generated in 0.00046s] {}
2023-07-25 20:13:38,175 - INFO - Se han listado los usuarios.
2023-07-25 20:13:50,710 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:13:50,710 - INFO - [cached since 22.39s ago] {'id_1': 15, 'param_1': 1}
2023-07-25 20:13:50,712 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:14:52,972 - INFO - Se han listado los usuarios.
2023-07-25 20:14:52,973 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:14:52,975 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:14:52,978 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:14:52,978 - INFO - [generated in 0.00048s] {'id_1': 15, 'param_1': 1}
2023-07-25 20:14:52,979 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:14:52,981 - INFO - HTTP Request: GET http://testserver/Usuarios/ver/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:16:32,319 - ERROR - Se ha intentado grabar el usuario login de prueba, pero ya existe.
2023-07-25 20:17:00,814 - INFO - Se han listado los usuarios.
2023-07-25 20:17:00,816 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:17:00,818 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:17:00,821 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:17:00,821 - INFO - [generated in 0.00060s] {'id_1': 15, 'param_1': 1}
2023-07-25 20:17:00,822 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:17:00,823 - INFO - HTTP Request: GET http://testserver/Usuarios/ver/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:17:00,825 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:17:00,828 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:17:00,828 - INFO - [generated in 0.00045s] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:17:00,830 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.login = %(login_1)s 
 LIMIT %(param_1)s
2023-07-25 20:17:00,830 - INFO - [generated in 0.00037s] {'login_1': 'login de prueba', 'param_1': 1}
2023-07-25 20:17:00,830 - ERROR - Se ha intentado grabar el usuario login de prueba, pero ya existe.
2023-07-25 20:17:00,832 - INFO - HTTP Request: POST http://testserver/Usuarios/insertar "HTTP/1.1 200 OK"
2023-07-25 20:19:53,642 - INFO - Se ha actualizado el usuario 15
2023-07-25 20:20:04,698 - INFO - Se han listado los usuarios.
2023-07-25 20:20:04,700 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:20:04,702 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:20:04,720 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:04,721 - INFO - [generated in 0.01538s] {'id_1': 15, 'param_1': 1}
2023-07-25 20:20:04,722 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:20:04,723 - INFO - HTTP Request: GET http://testserver/Usuarios/ver/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:20:04,725 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:20:04,728 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:04,729 - INFO - [generated in 0.00071s] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:20:04,732 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.login = %(login_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:04,732 - INFO - [generated in 0.00055s] {'login_1': 'login de prueba', 'param_1': 1}
2023-07-25 20:20:04,733 - ERROR - Se ha intentado grabar el usuario login de prueba, pero ya existe.
2023-07-25 20:20:04,734 - INFO - HTTP Request: POST http://testserver/Usuarios/insertar "HTTP/1.1 200 OK"
2023-07-25 20:20:04,737 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:20:04,739 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:04,739 - INFO - [generated in 0.00050s] {'id_1': '18', 'param_1': 1}
2023-07-25 20:20:04,741 - INFO - HTTP Request: PUT http://testserver/Usuarios/actualizar/id/18 "HTTP/1.1 200 OK"
2023-07-25 20:20:24,300 - INFO - Se han listado los usuarios.
2023-07-25 20:20:24,302 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:20:24,304 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:20:24,321 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:24,321 - INFO - [generated in 0.01501s] {'id_1': 15, 'param_1': 1}
2023-07-25 20:20:24,322 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:20:24,323 - INFO - HTTP Request: GET http://testserver/Usuarios/ver/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:20:24,325 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:20:24,328 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:24,328 - INFO - [generated in 0.00048s] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:20:24,331 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.login = %(login_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:24,331 - INFO - [generated in 0.00074s] {'login_1': 'login de prueba', 'param_1': 1}
2023-07-25 20:20:24,332 - ERROR - Se ha intentado grabar el usuario login de prueba, pero ya existe.
2023-07-25 20:20:24,333 - INFO - HTTP Request: POST http://testserver/Usuarios/insertar "HTTP/1.1 200 OK"
2023-07-25 20:20:24,335 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:20:24,338 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:24,338 - INFO - [generated in 0.00050s] {'id_1': '15', 'param_1': 1}
2023-07-25 20:20:24,339 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:20:24,339 - INFO - [cached since 0.01156s ago] {'nombre_rol_1': 'string', 'param_1': 1}
2023-07-25 20:20:24,340 - ERROR - Se ha intentado actualizar el usuario 15, pero no existe.
2023-07-25 20:20:24,341 - INFO - HTTP Request: PUT http://testserver/Usuarios/actualizar/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:21:04,334 - INFO - Se han listado los usuarios.
2023-07-25 20:21:04,336 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:21:04,338 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:21:04,341 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:21:04,341 - INFO - [generated in 0.00056s] {'id_1': 15, 'param_1': 1}
2023-07-25 20:21:04,342 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:21:04,344 - INFO - HTTP Request: GET http://testserver/Usuarios/ver/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:21:04,346 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:21:04,349 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:21:04,349 - INFO - [generated in 0.00058s] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:21:04,352 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.login = %(login_1)s 
 LIMIT %(param_1)s
2023-07-25 20:21:04,352 - INFO - [generated in 0.00052s] {'login_1': 'login de prueba', 'param_1': 1}
2023-07-25 20:21:04,353 - ERROR - Se ha intentado grabar el usuario login de prueba, pero ya existe.
2023-07-25 20:21:04,354 - INFO - HTTP Request: POST http://testserver/Usuarios/insertar "HTTP/1.1 200 OK"
2023-07-25 20:21:04,356 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:21:04,372 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:21:04,372 - INFO - [generated in 0.01422s] {'id_1': '15', 'param_1': 1}
2023-07-25 20:21:04,374 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:21:04,374 - INFO - [cached since 0.02575s ago] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:21:04,377 - INFO - UPDATE usuarios SET updated_at=%(updated_at)s WHERE usuarios.id = %(usuarios_id)s
2023-07-25 20:21:04,377 - INFO - [generated in 0.00040s] {'updated_at': datetime.datetime(2023, 7, 25, 20, 21, 4, 375416), 'usuarios_id': 15}
2023-07-25 20:21:04,378 - INFO - COMMIT
2023-07-25 20:21:04,380 - INFO - Se ha actualizado el usuario 15
2023-07-25 20:21:04,381 - INFO - HTTP Request: PUT http://testserver/Usuarios/actualizar/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:21:35,725 - ERROR - El usuario 18 se ha intntado eliminar, pero no existe.
2023-07-25 20:22:02,125 - INFO - Se han listado los usuarios.
2023-07-25 20:22:02,127 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:22:02,129 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:02,132 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:02,132 - INFO - [generated in 0.00047s] {'id_1': 15, 'param_1': 1}
2023-07-25 20:22:02,133 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:22:02,134 - INFO - HTTP Request: GET http://testserver/Usuarios/ver/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:22:02,137 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:02,140 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:02,140 - INFO - [generated in 0.00054s] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:22:02,142 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.login = %(login_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:02,142 - INFO - [generated in 0.00040s] {'login_1': 'login de prueba', 'param_1': 1}
2023-07-25 20:22:02,154 - ERROR - Se ha intentado grabar el usuario login de prueba, pero ya existe.
2023-07-25 20:22:02,155 - INFO - HTTP Request: POST http://testserver/Usuarios/insertar "HTTP/1.1 200 OK"
2023-07-25 20:22:02,157 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:02,174 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:02,174 - INFO - [generated in 0.01459s] {'id_1': '15', 'param_1': 1}
2023-07-25 20:22:02,176 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:02,176 - INFO - [cached since 0.03647s ago] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:22:02,179 - INFO - UPDATE usuarios SET updated_at=%(updated_at)s WHERE usuarios.id = %(usuarios_id)s
2023-07-25 20:22:02,179 - INFO - [generated in 0.00045s] {'updated_at': datetime.datetime(2023, 7, 25, 20, 22, 2, 177207), 'usuarios_id': 15}
2023-07-25 20:22:02,180 - INFO - COMMIT
2023-07-25 20:22:02,181 - INFO - Se ha actualizado el usuario 15
2023-07-25 20:22:02,182 - INFO - HTTP Request: PUT http://testserver/Usuarios/actualizar/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:22:02,184 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:02,186 - INFO - HTTP Request: DELETE http://testserver/Usuarios/borrar/id/18 "HTTP/1.1 404 Not Found"
2023-07-25 20:22:33,957 - INFO - Se han listado los usuarios.
2023-07-25 20:22:33,959 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:22:33,961 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:33,975 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:33,975 - INFO - [generated in 0.01194s] {'id_1': 15, 'param_1': 1}
2023-07-25 20:22:33,976 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:22:33,978 - INFO - HTTP Request: GET http://testserver/Usuarios/ver/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:22:33,980 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:33,982 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:33,982 - INFO - [generated in 0.00052s] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:22:33,985 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.login = %(login_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:33,985 - INFO - [generated in 0.00053s] {'login_1': 'login de prueba', 'param_1': 1}
2023-07-25 20:22:33,986 - ERROR - Se ha intentado grabar el usuario login de prueba, pero ya existe.
2023-07-25 20:22:33,987 - INFO - HTTP Request: POST http://testserver/Usuarios/insertar "HTTP/1.1 200 OK"
2023-07-25 20:22:33,989 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:33,992 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:33,992 - INFO - [generated in 0.00051s] {'id_1': '15', 'param_1': 1}
2023-07-25 20:22:33,993 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:33,994 - INFO - [cached since 0.01167s ago] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:22:33,996 - INFO - UPDATE usuarios SET updated_at=%(updated_at)s WHERE usuarios.id = %(usuarios_id)s
2023-07-25 20:22:33,996 - INFO - [generated in 0.00041s] {'updated_at': datetime.datetime(2023, 7, 25, 20, 22, 33, 994766), 'usuarios_id': 15}
2023-07-25 20:22:33,997 - INFO - COMMIT
2023-07-25 20:22:33,998 - INFO - Se ha actualizado el usuario 15
2023-07-25 20:22:33,999 - INFO - HTTP Request: PUT http://testserver/Usuarios/actualizar/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:22:34,001 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:34,003 - INFO - BEGIN (implicit)
2023-07-25 20:22:34,004 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:34,004 - INFO - [cached since 0.01245s ago] {'id_1': '18', 'param_1': 1}
2023-07-25 20:22:34,005 - ERROR - El usuario 18 se ha intntado eliminar, pero no existe.
2023-07-25 20:22:34,006 - INFO - HTTP Request: DELETE http://testserver/Usuarios/eliminar/id/18 "HTTP/1.1 200 OK"
2023-07-25 20:22:45,801 - INFO - Se han listado los usuarios.
2023-07-25 20:22:45,803 - INFO - HTTP Request: GET http://testserver/Usuarios/listar "HTTP/1.1 200 OK"
2023-07-25 20:22:45,806 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:45,825 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at, roles.nombre_rol AS roles_nombre_rol 
FROM usuarios INNER JOIN roles ON usuarios.rol_id = roles.id 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:45,825 - INFO - [generated in 0.01694s] {'id_1': 15, 'param_1': 1}
2023-07-25 20:22:45,827 - INFO - Se ha visto el usuario login de prueba
2023-07-25 20:22:45,828 - INFO - HTTP Request: GET http://testserver/Usuarios/ver/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:22:45,830 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:45,833 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:45,833 - INFO - [generated in 0.00048s] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:22:45,835 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.login = %(login_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:45,835 - INFO - [generated in 0.00049s] {'login_1': 'login de prueba', 'param_1': 1}
2023-07-25 20:22:45,836 - ERROR - Se ha intentado grabar el usuario login de prueba, pero ya existe.
2023-07-25 20:22:45,838 - INFO - HTTP Request: POST http://testserver/Usuarios/insertar "HTTP/1.1 200 OK"
2023-07-25 20:22:45,840 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:45,843 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:45,843 - INFO - [generated in 0.00057s] {'id_1': '15', 'param_1': 1}
2023-07-25 20:22:45,844 - INFO - SELECT roles.id AS roles_id, roles.nombre_rol AS roles_nombre_rol, roles.created_at AS roles_created_at, roles.updated_at AS roles_updated_at 
FROM roles 
WHERE roles.nombre_rol = %(nombre_rol_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:45,845 - INFO - [cached since 0.01228s ago] {'nombre_rol_1': 'Escritor', 'param_1': 1}
2023-07-25 20:22:45,847 - INFO - UPDATE usuarios SET updated_at=%(updated_at)s WHERE usuarios.id = %(usuarios_id)s
2023-07-25 20:22:45,847 - INFO - [generated in 0.00044s] {'updated_at': datetime.datetime(2023, 7, 25, 20, 22, 45, 845795), 'usuarios_id': 15}
2023-07-25 20:22:45,848 - INFO - COMMIT
2023-07-25 20:22:45,849 - INFO - Se ha actualizado el usuario 15
2023-07-25 20:22:45,851 - INFO - HTTP Request: PUT http://testserver/Usuarios/actualizar/id/15 "HTTP/1.1 200 OK"
2023-07-25 20:22:45,853 - DEBUG - Using selector: KqueueSelector
2023-07-25 20:22:45,855 - INFO - BEGIN (implicit)
2023-07-25 20:22:45,855 - INFO - SELECT usuarios.id AS usuarios_id, usuarios.login AS usuarios_login, usuarios.email AS usuarios_email, usuarios.password AS usuarios_password, usuarios.rol_id AS usuarios_rol_id, usuarios.activo AS usuarios_activo, usuarios.created_at AS usuarios_created_at, usuarios.updated_at AS usuarios_updated_at 
FROM usuarios 
WHERE usuarios.id = %(id_1)s 
 LIMIT %(param_1)s
2023-07-25 20:22:45,856 - INFO - [cached since 0.01304s ago] {'id_1': '18', 'param_1': 1}
2023-07-25 20:22:45,856 - ERROR - El usuario 18 se ha intntado eliminar, pero no existe.
2023-07-25 20:22:45,857 - INFO - HTTP Request: DELETE http://testserver/Usuarios/eliminar/id/18 "HTTP/1.1 200 OK"
